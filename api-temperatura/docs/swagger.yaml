definitions:
  models.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Temperatura:
    properties:
      temperatura:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /home:
    get:
      description: Retorna uma mensagem de boas-vindas da API Temperatura
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Api Temperatura rodando com sucesso!'
          schema:
            type: string
      security:
      - apikey //Defina a autenticao necessaria para essa rota: []
      summary: Retorna uma mensagem de boas-vindas da API
      tags:
      - Bem-vindo
  /login:
    post:
      consumes:
      - application/json
      description: Efetua o login de um usuario com base nos dados fornecidos
      parameters:
      - description: Dados de login do usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Token gerado com sucesso
          schema:
            type: string
        "400":
          description: 'Erro de solicitacao: Nao foi possivel enviar o body'
          schema:
            type: string
        "401":
          description: 'Erro interno do servidor: Erro ao gerar o token'
          schema:
            type: string
        "500":
          description: 'Erro interno do servidor: Erro ao gerar o token'
          schema:
            type: string
      summary: Efetua Login de usuario
      tags:
      - Login
  /temperatura:
    get:
      description: Retorna a lista de temperatura cadastradas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Temperatura'
            type: array
      summary: Consulta a temperatura
      tags:
      - Temperatura
    post:
      consumes:
      - application/json
      description: Cadastra uma nova temperatura
      parameters:
      - description: Cadatro de uma nova temperatura
        in: body
        name: temperatura
        required: true
        schema:
          $ref: '#/definitions/models.Temperatura'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Temperatura'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Cadastra uma nova temperatura
      tags:
      - Temperatura
  /user:
    get:
      description: Retorna a lista de usuarios cadastrados no banco de dados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Obtem a lista de usuarios
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Cria um novo usuario com base nos dados fornecidos
      parameters:
      - description: Dados do usu√°rio a serem criados
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Usuario criado com sucesso
          schema:
            type: string
        "400":
          description: 'Erro de solicitacao: Nao foi possivel vincular o JSON'
          schema:
            type: string
      summary: Cria um novo usuario
      tags:
      - User
swagger: "2.0"
